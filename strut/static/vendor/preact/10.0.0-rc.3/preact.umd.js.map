{"version":3,"file":"preact.umd.js","sources":["../src/options.js","../src/create-element.js","../src/component.js","../src/render.js","../src/create-context.js","../src/constants.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/clone-element.js"],"sourcesContent":["/** @type {import('./internal').Options}  */\nconst options = {};\n\nexport default options;\n","import options from './options';\nimport { assign } from './util';\n\n/**\n  * Create an virtual node (used for JSX)\n  * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n  * constructor for this virtual node\n  * @param {object | null | undefined} [props] The properties of the virtual node\n  * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n  * @returns {import('./internal').VNode}\n  */\nexport function createElement(type, props, children) {\n\tprops = assign({}, props);\n\n\tif (arguments.length>3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (let i=3; i<arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children!=null) {\n\t\tprops.children = children;\n\t}\n\n\t// \"type\" may be undefined during development. The check is needed so that\n\t// we can display a nice error message with our debug helpers\n\tif (type!=null && type.defaultProps!=null) {\n\t\tfor (let i in type.defaultProps) {\n\t\t\tif (props[i]===undefined) props[i] = type.defaultProps[i];\n\t\t}\n\t}\n\tlet ref = props.ref;\n\tlet key = props.key;\n\tif (ref!=null) delete props.ref;\n\tif (key!=null) delete props.key;\n\n\treturn createVNode(type, props, key, ref);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null,\n\t\tconstructor: undefined\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode => vnode!=null && vnode.constructor === undefined;\n\n/**\n * Coerce an untrusted value into a VNode\n * Specifically, this should be used anywhere a user could provide a boolean, string, or number where\n * a VNode or Component is desired instead\n * @param {boolean | string | number | import('./internal').VNode} possibleVNode A possible VNode\n * @returns {import('./internal').VNode | null}\n */\nexport function coerceToVNode(possibleVNode) {\n\tif (possibleVNode == null || typeof possibleVNode === 'boolean') return null;\n\tif (typeof possibleVNode === 'string' || typeof possibleVNode === 'number') {\n\t\treturn createVNode(null, possibleVNode, null, null);\n\t}\n\n\t// Clone vnode if it has already been used. ceviche/#57\n\tif (possibleVNode._dom!=null || possibleVNode._component!=null) {\n\t\tlet vnode = createVNode(possibleVNode.type, possibleVNode.props, possibleVNode.key, null);\n\t\tvnode._dom = possibleVNode._dom;\n\t\treturn vnode;\n\t}\n\n\treturn possibleVNode;\n}\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n\t// this.constructor // When component is functional component, this is reset to functional component\n\t// if (this.state==null) this.state = {};\n\t// this.state = {};\n\t// this._dirty = true;\n\t// this._renderCallbacks = []; // Only class components\n\n\t// Other properties that Component will have set later,\n\t// shown here as commented out for quick reference\n\t// this.base = null;\n\t// this._context = null;\n\t// this._vnode = null;\n\t// this._nextState = null; // Only class components\n\t// this._processingException = null; // Always read, set only when handling error\n\t// this._pendingError = null; // Always read, set only when handling error. This is used to indicate at diffTime to set _processingException\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s = (this._nextState!==this.state && this._nextState) || (this._nextState = assign({}, this.state));\n\n\t// if update() mutates state in-place, skip the copy:\n\tif (typeof update!=='function' || (update = update(s, this.props))) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update==null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tlet vnode = this._vnode, oldDom = this._vnode._dom, parentDom = this._parentDom;\n\tif (parentDom) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tconst force = callback!==false;\n\n\t\tlet mounts = [];\n\t\tlet newDom = diff(parentDom, vnode, assign({}, vnode), this._context, parentDom.ownerSVGElement!==undefined, null, mounts, force, oldDom == null ? getDomSibling(vnode) : oldDom);\n\t\tcommitRoot(mounts, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n\tif (callback) callback();\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type === 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb) => void}\n */\nconst defer = typeof Promise=='function' ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce = options.debounceRendering;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif ((!c._dirty && (c._dirty = true) && q.push(c) === 1) ||\n\t    (prevDebounce !== options.debounceRendering)) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(options.debounceRendering || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._vnode._depth - a._vnode._depth);\n\twhile ((p=q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) p.forceUpdate(false);\n\t}\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\tlet oldVNode = isHydrating ? null : replaceNode && replaceNode._children || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet mounts = [];\n\tdiff(\n\t\tparentDom,\n\t\tisHydrating ? parentDom._children = vnode : (replaceNode || parentDom)._children = vnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tmounts,\n\t\tfalse,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating,\n\t);\n\tcommitRoot(mounts, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\n/**\n *\n * @param {any} defaultValue\n */\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\tthis.shouldComponentUpdate = function (_props, _state, _context) {\n\t\t\t\treturn _context !== context;\n\t\t\t};\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\t\t\t\tthis.shouldComponentUpdate = props => {\n\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t// Check if still mounted\n\t\t\t\t\t\tif (c._parentDom) {\n\t\t\t\t\t\t\tc.context = props.value;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tthis.sub = (c) => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\treturn context;\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { coerceToVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts The list of components\n * which have mounted\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(parentDom, newParentVNode, oldParentVNode, context, isSvg, excessDomChildren, mounts, oldDom, isHydrating) {\n\tlet i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t}\n\t\telse if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t}\n\t\telse {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\ti=0;\n\tnewParentVNode._children = toChildArray(newParentVNode._children, childVNode => {\n\n\t\tif (childVNode!=null) {\n\t\t\tchildVNode._parent = newParentVNode;\n\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t// (holes).\n\t\t\toldVNode = oldChildren[i];\n\n\t\t\tif (oldVNode===null || (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type)) {\n\t\t\t\toldChildren[i] = undefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\tfor (j=0; j<oldChildrenLength; j++) {\n\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\tif (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\toldVNode = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\tnewDom = diff(parentDom, childVNode, oldVNode, context, isSvg, excessDomChildren, mounts, null, oldDom, isHydrating);\n\n\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t(refs || (refs=[])).push(j, childVNode._component || newDom, childVNode);\n\t\t\t}\n\n\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\tif (newDom!=null) {\n\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t}\n\n\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\n\t\t\t\t\t// Eagerly cleanup _lastDomChild. We don't need to persist the value because\n\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t// diffing Components and Fragments.\n\t\t\t\t\tchildVNode._lastDomChild = null;\n\t\t\t\t}\n\t\t\t\telse if (excessDomChildren==oldVNode || newDom!=oldDom || newDom.parentNode==null) {\n\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\touter: if (oldDom==null || oldDom.parentNode!==parentDom) {\n\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\tfor (sibDom=oldDom, j=0; (sibDom=sibDom.nextSibling) && j<oldChildrenLength; j+=2) {\n\t\t\t\t\t\t\tif (sibDom==newDom) {\n\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t\t\t// there are probably some internal data structures that aren't\n\t\t\t\t\t// updated properly.\n\t\t\t\t\t//\n\t\t\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t\t\t// value check in `diff()` won't be skipped.\n\t\t\t\t\tif (newParentVNode.type == 'option') {\n\t\t\t\t\t\tparentDom.value = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldDom = newDom.nextSibling;\n\n\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t// At this point, if childVNode._lastDomChild existed, then\n\t\t\t\t\t// newDom = childVNode._lastDomChild per line 101. Else it is\n\t\t\t\t\t// the same as childVNode._dom, meaning this component returned\n\t\t\t\t\t// only a single DOM node\n\t\t\t\t\tnewParentVNode._lastDomChild = newDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t\treturn childVNode;\n\t});\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren!=null && typeof newParentVNode.type !== 'function') for (i=excessDomChildren.length; i--; ) if (excessDomChildren[i]!=null) removeNode(excessDomChildren[i]);\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i=oldChildrenLength; i--; ) if (oldChildren[i]!=null) unmount(oldChildren[i], oldChildren[i]);\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {(vnode: import('../internal').VNode) => import('../internal').VNode} [callback]\n * A function to invoke for each child before it is added to the flattened list.\n * @param {import('../internal').VNode[]} [flattened] An flat array of children to modify\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, callback, flattened) {\n\tif (flattened == null) flattened = [];\n\n\tif (children==null || typeof children === 'boolean') {\n\t\tif (callback) flattened.push(callback(null));\n\t}\n\telse if (Array.isArray(children)) {\n\t\tfor (let i=0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], callback, flattened);\n\t\t}\n\t}\n\telse {\n\t\tflattened.push(callback ? callback(coerceToVNode(children)) : children);\n\t}\n\n\treturn flattened;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (!(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif ((!hydrate || typeof newProps[i]=='function') && i!=='value' && i!=='checked' && oldProps[i]!==newProps[i]) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t}\n\telse {\n\t\tstyle[key] = typeof value==='number' && IS_NON_DIMENSIONAL.test(key)===false ? value+'px' : value || '';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tname = isSvg ? (name==='className' ? 'class' : name) : (name==='class' ? 'className' : name);\n\n\tif (name==='key' || name === 'children') {}\n\telse if (name==='style') {\n\t\tconst s = dom.style;\n\n\t\tif (typeof value==='string') {\n\t\t\ts.cssText = value;\n\t\t}\n\t\telse {\n\t\t\tif (typeof oldValue==='string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) for (let i in oldValue) {\n\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) for (let i in value) {\n\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0]==='o' && name[1]==='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t}\n\t\telse {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t}\n\telse if (\n\t\tname!=='list'\n\t\t&& name!=='tagName'\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\t&& name!=='form'\n\t\t&& !isSvg\n\t\t&& (name in dom)\n\t) {\n\t\tdom[name] = value==null ? '' : value;\n\t}\n\telse if (typeof value!=='function' && name!=='dangerouslySetInnerHTML') {\n\t\tif (name!==(name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value==null || value===false) {\n\t\t\t\tdom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\t}\n\t\t}\n\t\telse if (value==null || value===false) {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t\telse {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component, enqueueRender } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts A list of newly\n * mounted components\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diff(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, force, oldDom, isHydrating) {\n\tlet tmp, newType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif (tmp = options._diff) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType==='function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && context[tmp._id];\n\t\t\tlet cctx = tmp ? (provider ? provider.props.value : tmp._defaultValue) : context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, cctx); // eslint-disable-line new-cap\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState==null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps!=null) {\n\t\t\t\tassign(c._nextState==c.state ? (c._nextState = assign({}, c._nextState)) : c._nextState, newType.getDerivedStateFromProps(newProps, c._nextState));\n\t\t\t}\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && c.componentWillMount!=null) c.componentWillMount();\n\t\t\t\tif (c.componentDidMount!=null) mounts.push(c);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (newType.getDerivedStateFromProps==null && force==null && c.componentWillReceiveProps!=null) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (!force && c.shouldComponentUpdate!=null && c.shouldComponentUpdate(newProps, c._nextState, cctx)===false) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldDom!=null ? oldDom!==oldVNode._dom ? oldDom : oldVNode._dom : null;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tfor (tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\t\t\t\t\tif (newVNode._children[tmp]) newVNode._children[tmp]._parent = newVNode;\n\t\t\t\t\t}\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate!=null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, cctx);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (tmp = options._render) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment = tmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tnewVNode._children = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tif (c.getChildContext!=null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate!=null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, oldDom, isHydrating);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\twhile (tmp=c._renderCallbacks.pop()) {\n\t\t\t\tif (c._nextState) { c.state = c._nextState; }\n\t\t\t\ttmp.call(c);\n\t\t\t}\n\n\t\t\t// Don't call componentDidUpdate on mount or when we bailed out via\n\t\t\t// `shouldComponentUpdate`\n\t\t\tif (!isNew && oldProps!=null && c.componentDidUpdate!=null) {\n\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tnewVNode._dom = diffElementNodes(oldVNode._dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, isHydrating);\n\t\t}\n\n\t\tif (tmp = options.diffed) tmp(newVNode);\n\t}\n\tcatch (e) {\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\nexport function commitRoot(mounts, root) {\n\tlet c;\n\twhile ((c = mounts.pop())) {\n\t\ttry {\n\t\t\tc.componentDidMount();\n\t\t}\n\t\tcatch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n\n\tif (options._commit) options._commit(root);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} mounts An array of newly\n * mounted components\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(dom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, isHydrating) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type==='svg' || isSvg;\n\n\tif (dom==null && excessDomChildren!=null) {\n\t\tfor (i=0; i<excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\t\t\tif (child!=null && (newVNode.type===null ? child.nodeType===3 : child.localName===newVNode.type)) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom==null) {\n\t\tif (newVNode.type===null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\t\tdom = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type) : document.createElement(newVNode.type);\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type===null) {\n\t\tif (oldProps !== newProps) {\n\t\t\tif (excessDomChildren!=null) excessDomChildren[excessDomChildren.indexOf(dom)] = null;\n\t\t\tdom.data = newProps;\n\t\t}\n\t}\n\telse if (newVNode!==oldVNode) {\n\t\tif (excessDomChildren!=null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html!=oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = newHtml && newHtml.__html || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\tnewVNode._children = newVNode.props.children;\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (!newHtml) {\n\t\t\tdiffChildren(dom, newVNode, oldVNode, context, newVNode.type==='foreignObject' ? false : isSvg, excessDomChildren, mounts, EMPTY_OBJ, isHydrating);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (('value' in newProps) && newProps.value!==undefined && newProps.value !== dom.value) dom.value = newProps.value==null ? '' : newProps.value;\n\t\t\tif (('checked' in newProps) && newProps.checked!==undefined && newProps.checked !== dom.checked) dom.checked = newProps.checked;\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n\tcatch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif (r = vnode.ref) {\n\t\tapplyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type !== 'function') {\n\t\tskipRemove = (dom = vnode._dom)!=null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component)!=null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif (r = vnode._children) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom!=null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} oldVNode The oldVNode of the vnode\n * that threw, if this VNode threw while diffing\n */\n(options)._catchError = function (error, vnode, oldVNode) {\n\n\t/** @type {import('../internal').Component} */\n\tlet component;\n\n\tfor (; vnode = vnode._parent;) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (component.constructor && component.constructor.getDerivedStateFromError!=null) {\n\t\t\t\t\tcomponent.setState(component.constructor.getDerivedStateFromError(error));\n\t\t\t\t}\n\t\t\t\telse if (component.componentDidCatch!=null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender(component._pendingError = component);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n};\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length>2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(vnode.type, props, props.key || vnode.key, props.ref || vnode.ref);\n}\n"],"names":["options","isValidElement","q","defer","prevDebounce","IS_HYDRATE","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","let","removeNode","node","parentNode","removeChild","createElement","type","children","ref","key","arguments","length","push","defaultProps","undefined","createVNode","vnode","_children","_parent","_depth","_dom","_lastDomChild","_component","constructor","Fragment","coerceToVNode","possibleVNode","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","_dirty","debounceRendering","process","p","sort","a","b","_vnode","pop","forceUpdate","diffChildren","parentDom","newParentVNode","oldParentVNode","isSvg","excessDomChildren","mounts","oldDom","isHydrating","j","oldVNode","newDom","sibDom","firstChildDom","refs","oldChildren","oldChildrenLength","toChildArray","childVNode","diff","outer","appendChild","nextSibling","insertBefore","value","unmount","applyRef","callback","flattened","Array","isArray","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","s","useCapture","nameLower","cssText","replace","toLowerCase","slice","addEventListener","eventProxy","_listeners","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","e","this","event","newVNode","force","tmp","isNew","oldState","snapshot","clearProcessingException","provider","cctx","newType","_diff","contextType","_id","_defaultValue","_processingException","_pendingError","prototype","render","doRender","sub","state","_context","_renderCallbacks","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","_render","_parentDom","getChildContext","getSnapshotBeforeUpdate","call","componentDidUpdate","diffElementNodes","diffed","_catchError","commitRoot","root","_commit","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","data","childNodes","dangerouslySetInnerHTML","__html","innerHTML","checked","current","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","_root","ownerSVGElement","setState","update","Promise","then","bind","resolve","setTimeout","error","component","getDerivedStateFromError","componentDidCatch","defaultValue","ctx","Consumer","_props","_state","Provider","subs","some","old","splice"],"mappings":"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"}